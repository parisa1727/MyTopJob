describe(ratings)
library(readxl)
mobile_app_user_dataset <- read_excel("~/Documents/datasets/RS datasets/mobile_app_user_dataset.xlsx")
View(mobile_app_user_dataset)
library(readr)
user_artists <- read_delim("~/Documents/datasets/RS datasets/hetrec2011-lastfm-2k/user_artists.dat",
"\t", escape_double = FALSE, trim_ws = TRUE)
View(user_artists)
desscribe(user_artists)
describe(user_artists)
min(table(user_artists$userID))
max(table(user_artists$userID))
Lastfm<-user_artists[which(table(user_artists$userID)>=5)),]
Lastfm<-user_artists[which(table(user_artists$userID)>=5),]
min(table(user_artists$userID))
min(table(Lastfm$userID))
Lastfm<-user_artists[which(table(user_artists$userID)>=4),]
min(table(Lastfm$userID))
Lastfm<-user_artists[which(table(user_artists$userID)>=10),]
min(table(Lastfm$userID))
describe(Lastfm)
Lastfm<-user_artists[which(table(user_artists$userID)>=3),]
min(table(Lastfm$userID))
Lastfm<-user_artists[which(table(user_artists$userID)==1),]
Lastfm<-user_artists[which(table(user_artists$userID)=1),]
Lastfm<-user_artists[which(table(user_artists$userID)==2),]
Lastfm<-user_artists[which(table(user_artists$userID)==1),]
Lastfm<-user_artists[which(table(user_artists$userID)==15),]
Lastfm<-user_artists[which(table(user_artists$userID)>15),]
Lastfm<-user_artists[which(table(user_artists$userID)>5),]
Lastfm<-user_artists[which(table(user_artists$userID)>1),]
table(user_artists$userID)
table(user_artists$userID)=10
table(user_artists$userID)>=10
user_artists$table<-table(user_artists$userID>=10)
Lastfm<-user_artists[which(user_artists$table==TRUE),]
View(user_artists)
Lastfm<-user_artists[which(user_artists$table>=10),]
user_artists$table<-table(user_artists$userID)
Lastfm<-user_artists[ user_artists$userID %in%  names(table(user_artists$userID))[table(user_artists$userID) >9] , ]
table (Lastfm$userID)
min(table (Lastfm$userID))
describe(Lastfm)
Lastfm<-user_artists[ user_artists$userID %in%  names(table(user_artists$userID))[table(user_artists$userID) >19] , ]
Lastfm<-Lastfm[1:2,]
Lastfm<-user_artists[ user_artists$userID %in%  names(table(user_artists$userID))[table(user_artists$userID) >19] , ]
Lastfm<-Lastfm[,1:2]
describe(Lastfm)
write.csv(Lastfm,"~/Documents/datasets/RS datasets/Lastfm.csv")
write.csv(Lastfm,"~/Documents/datasets/RS datasets/hetrec2011-lastfm-2k/Lastfm.csv")
min(table(Lastfm$userID))
librray(dplyr)
library(dplyr)
install.packages("dplyr")
library(dplyr)
length(Lastfm$userID)
unique(Lastfm$userID)
length(unique(Lastfm$userID))
i=1
L1<-Lastfm[which(Lastfm$userID==1),]
i=2
L1<-Lastfm[which(Lastfm$userID==1),]
L1<-Lastfm[which(Lastfm$userID==i),]
a<-zeros(1,1)
a<-[1,1]
a<-data.frame()
for (i in 1:length(unique(Lastfm$userID))){
set.seed(1234)
# Extract 10 random rows without replacement
L1<-Lastfm[which(Lastfm$userID==1),]
train[i]<-sample_n(L1, 10, replace = FALSE)
rbind(train[i],a)
}
for (i in 2:length(unique(Lastfm$userID))){
set.seed(1234)
# Extract 10 random rows without replacement
L1<-Lastfm[which(Lastfm$userID==1),]
train[i]<-sample_n(L1, 10, replace = FALSE)
rbind(train[i],a)
}
i in unique(Lastfm$userID)
for i in unique(Lastfm$userID){print(i)}
for (i in unique(Lastfm$userID)){print(i)}
for (i in unique(Lastfm$userID)){
set.seed(1234)
# Extract 10 random rows without replacement
L1<-Lastfm[which(Lastfm$userID==1),]
train[i]<-sample_n(L1, 10, replace = FALSE)
rbind(train[i],a)
}
min(table(Lastfm$userID))
for (i in unique(Lastfm$userID)){
set.seed(1234)
# Extract 10 random rows without replacement
L1<-Lastfm[which(Lastfm$userID==i),]
train[i]<-sample_n(L1, 10, replace = FALSE)
rbind(train[i],a)
}
for (i in unique(Lastfm$userID)){
set.seed(1234)
# Extract 10 random rows without replacement
L1<-Lastfm[which(Lastfm$userID==i),]
train<-sample_n(L1, 10, replace = FALSE)
rbind(train,a)
}
View(train)
for (i in unique(Lastfm$userID)){
set.seed(1234)
# Extract 10 random rows without replacement
L1<-Lastfm[which(Lastfm$userID==i),]
train<-sample_n(L1, 10, replace = FALSE)
a<-rbind(train,a)
}
View(a)
rest<-Lastfm-a
rest<-subset(Lastfm, !(Lastfm %in% a))
all <-rbind(Lastfm,a) #rbind the columns
rest<-all[!duplicated(all,fromLast = FALSE)&!duplicated(all,fromLast = TRUE),]
rn_train <- sample(nrow(rest), floor(nrow(rest)*0.75))
resttrain <- rest[rn_train,]
train<-rbind(a,resttrain)
test <- rest[-rn_train,]
write.csv(train,"~/Documents/datasets/RS datasets/hetrec2011-lastfm-2k/Lastfmtrain.csv")
write.csv(test,"~/Documents/datasets/RS datasets/hetrec2011-lastfm-2k/Lastfmtest.csv")
min(table(test$userID))
min(table(train$userID))
max(table(test$userID))
library(readr)
user_contacts <- read_delim("~/Documents/datasets/RS datasets/hetrec2011-delicious-2k/user_contacts.dat",
"\t", escape_double = FALSE, trim_ws = TRUE)
View(user_contacts)
describe(user_contacts)
library(Hmisc)
library(readr)
ratings <- read_delim("~/Documents/datasets/RS datasets/ratings_data 2.txt",
" ", escape_double = FALSE, col_names = FALSE,
trim_ws = TRUE)
View(ratings)
describe(ratings)
Epinion<-ratings[ ratings$X1 %in%  names(table(ratings$X1))[table(ratings$X1) >19] , ]
Epinion<-Epinion[,1:2]
write.csv(Epinion,"~/Documents/datasets/RS datasets/epinion/Epinion.csv")
library(dplyr)
a<-data.frame()
for (i in unique(Epinion$X1)){
set.seed(1234)
# Extract 10 random rows without replacement
L1<-Epinion[which(Epinion$X1==i),]
train<-sample_n(L1, 10, replace = FALSE)
a<-rbind(train,a)
}
all <-rbind(Epinion,a) #rbind the columns
rest<-all[!duplicated(all,fromLast = FALSE)&!duplicated(all,fromLast = TRUE),]
rn_train <- sample(nrow(rest), floor(nrow(rest)*0.75))
resttrain <- rest[rn_train,]
train<-rbind(a,resttrain)
test <- rest[-rn_train,]
write.csv(train,"~/Documents/datasets/RS datasets/epinion/Epiniontrain.csv")
write.csv(test,"~/Documents/datasets/RS datasets/epinion/Epiniontest.csv")
describe(train)
min(table(train$X1))
min(table(test$X1))
max(table(test$X1))
ratings <- read_delim("~/Documents/datasets/RS datasets/ratings_data 2.txt",
+     " ", escape_double = FALSE, col_names = FALSE,
+     trim_ws = TRUE)
ratings <- read_delim("~/Documents/datasets/RS datasets/ratings_data 2.txt", " ", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
library(readr)
ratings_data_2 <- read_delim("~/Documents/datasets/RS datasets/Epinion1/ratings_data 2.txt",
" ", escape_double = FALSE, col_names = FALSE,
trim_ws = TRUE)
View(ratings_data_2)
library(readr)
Epinion <- read_csv("~/Documents/datasets/RS datasets/Epinion1/Epinion.csv")
View(Epinion)
describe
describe (Epinion)
library (Hmisc)
describe(Epinion)
min(table(Epinion$X2))
max(table(Epinion$X2))
min(table(Epinion$X1))
min(table(Epinion$X1_1))
library(readr)
Epiniontrain <- read_csv("~/Documents/parisa/Epiniontrain.csv")
View(Epiniontrain)
describe(Epiniontrain)
library(readr)
Lastfmtrain <- read_csv("~/Documents/parisa/Lastfmtrain.csv")
View(Lastfmtrain)
describe(Lastfmtrain)
library(readr)
Lastfmtest <- read_csv("~/Documents/parisa/Lastfmtest.csv")
View(Lastfmtest)
describe(Lastfmtest)
library(readr)
movietrain <- read_csv("~/Documents/parisa/movietrain.csv")
View(movietrain)
library(readr)
movietest <- read_csv("~/Documents/parisa/movietest.csv")
View(movietest)
data<- rbind(movietest,movietrain)
describe(data)
min(table(data$uid))
max(table(data$uid))
subdata<- data[which(data$uid <50)]
subdata<- data[which(data$uid <50),]
min(table(subdata$uid))
library(dplyr)
a<-data.frame()
for (i in unique(subdata$uid)){
set.seed(1234)
# Extract 10 random rows without replacement
L1<-subdata[which(subdata$uid==i),]
train<-sample_n(L1, 10, replace = FALSE)
a<-rbind(train,a)
}
all <-rbind(subdata,a) #rbind the columns
rest<-all[!duplicated(all,fromLast = FALSE)&!duplicated(all,fromLast = TRUE),]
rn_train <- sample(nrow(rest), floor(nrow(rest)*0.75))
resttrain <- rest[rn_train,]
train<-rbind(a,resttrain)
test <- rest[-rn_train,]
min(table(train$uid))
describe subdata
describe (subdata)
write.csv(train,"~/Documents/datasets/submovietrain.csv")
write.csv(test,"~/Documents/datasets/submovietest.csv")
describe(test)
describe(Epinion)
library(Hmisc)
describe(Epinion)
user_artists <- read_delim("~/Documents/datasets/RS datasets/hetrec2011-lastfm-2k/user_artists.dat",
+     "\t", escape_double = FALSE, trim_ws = TRUE)
library(readr)
Lastfm <- read_csv("~/Documents/datasets/RS datasets/hetrec2011-lastfm-2k/Lastfm.csv")
View(Lastfm)
describe(Lastfm)
View(subdata)
describe(subdata)
movietrain <- read_csv("~/Documents/parisa/movietrain.csv")
movietest <- read_csv("~/Documents/parisa/movietest.csv")
data<- rbind(movietest,movietrain)
library(dplyr)
a<-data.frame()
set.seed(1234)
L1<-subdata[which(data$uid==i),]
a<-sample_n(L1, 1, replace = FALSE)
test<-rbind(test,a)
for (i in unique(data$uid)){
set.seed(1234)
# Extract 1 random rows without replacement
L1<-subdata[which(data$uid==i),]
a<-sample_n(L1, 1, replace = FALSE)
test<-rbind(test,a)
}
all <-rbind(subdata,test) #rbind the columns
train<-all[!duplicated(all,fromLast = FALSE)&!duplicated(all,fromLast = TRUE),]
write.csv(train,"~/PycharmProjects/replication/newmovietrain.csv")
write.csv(train,"~/Documents/datasets/newmovietrain.csv")
write.csv(test,"~/Documents/datasets/newmovietest.csv")
View(test)
data<- rbind(movietest,movietrain)
library(dplyr)
a<-data.frame()
for (i in unique(data$uid)){
set.seed(1234)
# Extract 1 random rows without replacement
L1<-subdata[which(data$uid==i),]
a<-sample_n(L1, 1, replace = FALSE)
test<-rbind(test,a)
}
for (i in unique(data$uid)){
set.seed(1234)
# Extract 1 random rows without replacement
L1<-data[which(data$uid==i),]
a<-sample_n(L1, 1, replace = FALSE)
test<-rbind(test,a)
}
View(L1)
View(a)
View(test)
test<-data.frame()
a<-data.frame()
test<-data.frame()
for (i in unique(data$uid)){
set.seed(1234)
# Extract 1 random rows without replacement
L1<-data[which(data$uid==i),]
a<-sample_n(L1, 1, replace = FALSE)
test<-rbind(test,a)
}
all <-rbind(subdata,test) #rbind the columns
train<-all[!duplicated(all,fromLast = FALSE)&!duplicated(all,fromLast = TRUE),]
write.csv(train,"~/Documents/datasets/newmovietrain.csv")
write.csv(test,"~/Documents/datasets/newmovietest.csv")
write.csv(train,"~/Documents/datasets/newmovietrain.csv",row.names=FALSE)
write.csv(test,"~/Documents/datasets/newmovietest.csv",row.names=FALSE)
setwd("/Users/parisalak/PycharmProjects/Data In/scraper")
list.filenames<-list.files(pattern=".csv$")
list.filenames
list.data<-list()
for (i in 1:length(list.filenames)){
list.data[[i]]<-read.csv(list.filenames[i],header= F)
}
names(list.data)<-list.filenames
b<-as.datafram()
list.data[1]
list.data[2]
list.data[3]
a<- merge (list.data)
files <- list.data()
data <- lapply(files, read.csv)
files <- list.data
data <- lapply(files, read.csv)
data <- ldply(data)
library(data.table)
files <- list.files(path = "/Users/parisalak/PycharmProjects/Data In/scraper",pattern = ".csv")
temp <- lapply(files, fread, sep=",")
data <- rbindlist( temp )
View(data)
names(data)
barplot (data$Salary)
describe(data)
library(Hmisc)
describe(data)
write.csv(data, "/Users/parisalak/PycharmProjects/Data In/scraper")
write.csv(data, "/Users/parisalak/PycharmProjects/Data In/scraper/mergeddata.csv")
barplot(data$Salary)
barplot(as.numeric(data$Salary)
)
barplot(table(data$Salary))
barplot(table(data$Salary[!is.na(data$Salary)]))
barplot(table(data$Salary[!is.na(data$Salary),]))
mydata<-data
a<- mydata$Salary[!is.na(mydata$Salary)]
a
a<- mydata$Salary[!is.na(mydata$Salary),]
a<-mydata$Salary
a
a<- mydata$Salary[!is.na(mydata$Salary)]
a
a<- mydata$Salary[!(mydata$Salary=="")]
a
barplot(a)
barplot(table(a))
library(data.table)
files <- list.files(path = "/Users/parisalak/PycharmProjects/Data In/scraper",pattern = ".csv")
temp <- lapply(files, fread, sep=",")
data <- rbindlist( temp )
write.csv(data, "/Users/parisalak/PycharmProjects/Data In/scraper/mergeddata.csv")
files <- list.files(path = "/Users/parisalak/PycharmProjects/Data In/scraper",pattern = ".csv")
temp <- lapply(files, fread, sep=",")
data <- rbindlist( temp )
mydata <- rbindlist( temp )
write.csv(mydata, "/Users/parisalak/PycharmProjects/Data In/scraper/mergeddata.csv")
files <- list.files(path = "/Users/parisalak/PycharmProjects/Data In/scraper",pattern = ".csv")
temp <- lapply(files, fread, sep=",")
mydata <- rbindlist( temp )
write.csv(mydata, "/Users/parisalak/PycharmProjects/Data In/scraper/merged file/mergeddata.csv")
files <- list.files(path = "/Users/parisalak/PycharmProjects/Data In/scraper",pattern = ".csv")
temp <- lapply(files, fread, sep=",")
mydata <- rbindlist( temp )
write.csv(mydata, "/Users/parisalak/PycharmProjects/Data In/scraper/merged file/mergeddata.csv")
temp <- lapply(files, fread, sep=",")
mydata <- rbindlist( temp )
write.csv(mydata, "/Users/parisalak/PycharmProjects/Data In/scraper/merged file/mergeddata.csv")
files <- list.files(path = "/Users/parisalak/PycharmProjects/Data In/scraper",pattern = ".csv")
temp <- lapply(files, fread, sep=",")
mydata <- rbindlist( temp )
write.csv(mydata, "/Users/parisalak/PycharmProjects/Data In/scraper/merged file/mergeddata.csv")
temp <- lapply(files, fread, sep=",")
mydata <- rbindlist( temp )
write.csv(mydata, "/Users/parisalak/PycharmProjects/Data In/scraper/merged file/mergeddata.csv")
files <- list.files(path = "/Users/parisalak/PycharmProjects/Data In/scraper",pattern = ".csv")
temp <- lapply(files, fread, sep=",")
mydata <- rbindlist( temp )
files <- list.files(path = "/Users/parisalak/PycharmProjects/Data In/scraper",pattern = ".csv")
temp <- lapply(files, fread, sep=",")
mydata <- rbindlist( temp )
library(data.table)
files <- list.files(path = "/Users/parisalak/PycharmProjects/Data In/scraper",pattern = ".csv")
temp <- lapply(files, fread, sep=",")
mydata <- rbindlist( temp )
temp[99]
files <- list.files(path = "/Users/parisalak/PycharmProjects/Data In/scraper",pattern = ".csv")
temp <- lapply(files, fread, sep=",")
mydata <- rbindlist( temp )
write.csv(mydata, "/Users/parisalak/PycharmProjects/Data In/scraper/merged file/mergeddata.csv")
describe(mydata)
barplot(rable(mydata$City))
barplot(table(mydata$City))
library(plotly)
install.packages("plotly")
library('plotly')
plot_ly(table(mydata$City))
plot_ly(mydata$City)
plot_ly(mydata)
p <- plot_ly(
x = c("giraffes", "orangutans", "monkeys"),
y = c(20, 14, 23),
name = "SF Zoo",
type = "bar"
)
chart_link = api_create(p, filename="bar/basic")
chart_link
Sys.setenv("plotly_username"="parisa1727")
Sys.setenv("plotly_api_key"="3UXkmLmjf6Vlf5Q8N9CB")
chart_link = api_create(p, filename="bar/basic")
chart_link
parisa1727
Sys.setenv("plotly_username"="parisa1727")
Sys.setenv("plotly_api_key"="3UXkmLmjf6Vlf5Q8N9CB")
p <- plot_ly(
x = c("giraffes", "orangutans", "monkeys"),
y = c(20, 14, 23),
name = "SF Zoo",
type = "bar"
)
chart_link = api_create(p, filename="bar/basic")
barplot(table(mydata$City))
barplot(table(mydata$Salary[!mydata$Salary==""]))
knitr::opts_chunk$set(echo = TRUE)
barplot(table(mydata$Salary[!mydata$Salary==""]))
barplot(table(mydata$Salary[!mydata$Salary==""]))
barplot(table(mydata$City[!mydata$City==""]))
barplot(table(mydata$Salary[!mydata$Salary==""]))
barplot(table(mydata$City[!mydata$City==""]))
barplot(table(mydata$Salary[!mydata$Salary==""]))
barplot(table(mydata$City[!mydata$City==""]))
barplot(table(mydata$Location[!mydata$Location==""]))
barplot(table(mydata$Salary[!mydata$Salary==""]))
barplot(table(mydata$City[!mydata$City==""]))
barplot(table(mydata$Location[!mydata$Location==""]))
barplot(head(table(mydata$Company),10))
barplot(head(table(mydata$Location[!mydata$Location==""])),10)
barplot(head(table(mydata$City[!mydata$City==""])),10)
barplot(head(table(mydata$City[!mydata$City==""])),20)
barplot(table(mydata$Salary[!mydata$Salary==""]))
barplot(head(table(mydata$City[!mydata$City==""])),20)
barplot(head(table(mydata$Company),10))
barplot(head(table(mydata$Salary[!mydata$Salary==""])),20)
barplot(head(table(mydata$City[!mydata$City==""])),20)
barplot(head(table(mydata$Company),10))
library(data.table)
files <- list.files(path = "/Users/parisalak/PycharmProjects/Data In/scraper",pattern = ".csv")
temp <- lapply(files, fread, sep=",")
mydata <- rbindlist( temp )
view(mydata)
View(mydata)
barplot(head(table(mydata$Salary[!mydata$Salary==""])),20)
install.packages("devtools")
library(devtools)
install_github("easyGgplot2", "kassambara")
library(easyGgplot2)
ggplot2.barplot(data=mydata, xName="City")
ggplot2.barplot(data=mydata, xName="City",xtickLabelRotation=45)
ggplot2.barplot(data=mydata, xName="City",xTickLabelFont=c(14,"bold", "#993333"),xtickLabelRotation=45)
ggplot2.barplot(data=mydata, xName="City",xtickLabelRotation=45)
ggplot2.barplot(data=mydata, xName="City",xtickLabelRotation=90)
ggplot2.barplot(data=mydata, xName="Salary",xtickLabelRotation=90)
data<-mydata[which(mydata$Salary!="")]
ggplot2.barplot(data=data, xName="Salary",xtickLabelRotation=90)
data<-mydata[which(mydata$Salary!="" && mydata$Name == "Data Scientist"),]
ggplot2.barplot(data=data, xName="Salary",xtickLabelRotation=90)
mydata$Name
data<-mydata[which(mydata$Salary!="" && mydata$Name %like% "Data"),]
data<-mydata[which((mydata$Salary!="") && mydata$Name %like% "Data"),]
data<-mydata[which(mydata$Name %like% "Data"),]
ggplot2.barplot(data=data, xName="Salary",xtickLabelRotation=90)
data1<-data[which(mydata$Salary!=""), ]
ggplot2.barplot(data=data1, xName="Salary",xtickLabelRotation=90)
data<-mydata[which(mydata$Name %like% "Data")&&(which(mydata$Salary!="")),]
ggplot2.barplot(data=data, xName="Salary",xtickLabelRotation=90)
View(data)
data<-mydata[which((mydata$Name %like% "Data")&& (mydata$Salary!="")),]
data<-mydata[which((mydata$Name %like% "Data"),]
data1<-data[which(mydata$Salary!=""), ]
ggplot2.barplot(data=data, xName="Salary",xtickLabelRotation=90)
data<-mydata[which((mydata$Name %like% "Data"),]
data1<-data[which(mydata$Salary!=""), ]
ggplot2.barplot(data=data, xName="Salary",xtickLabelRotation=90)
data<-mydata[which(mydata$Name %like% "Data"),]
ggplot2.barplot(data=data, xName="Name",xtickLabelRotation=90)
library(wordcloud)
wordcloud(word_count$word[1:50], word_count$count[1:50])
install.packages("wordcloud")
library(wordcloud)
library("wordcloud", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages("wordcloud")
library("wordcloud")
install.packages("tm")  # for text mining
install.packages("SnowballC") # for text stemming
install.packages("wordcloud") # word-cloud generator
install.packages("RColorBrewer") # color palettes
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
install.packages("RColorBrewer")
library("tm")
library("SnowballC")
library("wordcloud")
install.packages("slam")
install.packages("tm")  # for text mining
install.packages("SnowballC") # for text stemming
install.packages("SnowballC")
library("wordcloud", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
detach("package:wordcloud", unload=TRUE)
library("wordcloud", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("tm", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("SnowballC", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
